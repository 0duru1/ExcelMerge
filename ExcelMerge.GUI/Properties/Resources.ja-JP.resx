<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_ExtractDiff" xml:space="preserve">
    <value>差分抽出</value>
  </data>
  <data name="Label_SkipFirstBlankRows" xml:space="preserve">
    <value>先頭の空行を無視する</value>
  </data>
  <data name="MenuItem_ExeExternalCmd" xml:space="preserve">
    <value>外部コマンド実行</value>
  </data>
  <data name="MenuItem_ExternalCommands" xml:space="preserve">
    <value>外部コマンド</value>
  </data>
  <data name="MenuItem_DiffExtractionSetting" xml:space="preserve">
    <value>差分抽出設定</value>
  </data>
  <data name="MenuItem_OpenAsDstFile" xml:space="preserve">
    <value>右側として開く</value>
  </data>
  <data name="MenuItem_OpenAsSrcFile" xml:space="preserve">
    <value>左側として開く</value>
  </data>
  <data name="MenuItem_OpenDstFile" xml:space="preserve">
    <value>右側のファイルを開く</value>
  </data>
  <data name="MenuItem_OpenSrcFile" xml:space="preserve">
    <value>左側のファイルを開く</value>
  </data>
  <data name="MenuItem_RecentFiles" xml:space="preserve">
    <value>最近使ったファイル</value>
  </data>
  <data name="MenuItem_RecentFileSets" xml:space="preserve">
    <value>最近使ったファイルセット</value>
  </data>
  <data name="Message_Reboot" xml:space="preserve">
    <value>変更を適用するには再起動して下さい。</value>
  </data>
  <data name="Title_CommandEditorWindow" xml:space="preserve">
    <value>外部コマンド編集</value>
  </data>
  <data name="Title_CommandsWindow" xml:space="preserve">
    <value>外部コマンド</value>
  </data>
  <data name="Title_DiffSettingWindow" xml:space="preserve">
    <value>差分抽出設定</value>
  </data>
  <data name="ToolTip_DstFilePath" xml:space="preserve">
    <value>右側のファイルパス</value>
  </data>
  <data name="ToolTip_DstSheet" xml:space="preserve">
    <value>右側のシート</value>
  </data>
  <data name="ToolTip_SrcFilePath" xml:space="preserve">
    <value>左側のファイルパス</value>
  </data>
  <data name="ToolTip_SrcSheet" xml:space="preserve">
    <value>左側のシート</value>
  </data>
  <data name="Word_Apply" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="Word_Args" xml:space="preserve">
    <value>引数</value>
  </data>
  <data name="Word_Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Word_Default" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="Word_Done" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="Word_Edit" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="Word_English" xml:space="preserve">
    <value>英語</value>
  </data>
  <data name="Word_Executable" xml:space="preserve">
    <value>実行ファイル</value>
  </data>
  <data name="Word_File" xml:space="preserve">
    <value>フィル</value>
  </data>
  <data name="Word_Japanese" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="Word_Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="Word_Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="Word_Remove" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="Word_Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Word_Setting" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="Word_Tool" xml:space="preserve">
    <value>ツール</value>
  </data>
  <data name="ContextMenu_DiffAsHeader" xml:space="preserve">
    <value>この行をヘッダとして差分を抽出する</value>
  </data>
  <data name="ContextMenu_FreezeColumn" xml:space="preserve">
    <value>列を固定</value>
  </data>
  <data name="ContextMenu_ResetHeader" xml:space="preserve">
    <value>ヘッダを解除</value>
  </data>
  <data name="ContextMenu_SetHeader" xml:space="preserve">
    <value>ヘッダにセット</value>
  </data>
  <data name="ContextMenu_UnfreezeColumn" xml:space="preserve">
    <value>列の固定を解除</value>
  </data>
  <data name="GroupBox_DisplayFormat" xml:space="preserve">
    <value>表示形式</value>
  </data>
  <data name="Label_CellHeight" xml:space="preserve">
    <value>セルの高さ</value>
  </data>
  <data name="Label_CellWidth" xml:space="preserve">
    <value>セルの幅</value>
  </data>
  <data name="RadioButton_ShowAll" xml:space="preserve">
    <value>全て</value>
  </data>
  <data name="RadioButton_ShowOnlyDiff" xml:space="preserve">
    <value>差分のみ</value>
  </data>
  <data name="ToolTip_Swap" xml:space="preserve">
    <value>左右を入れ替え</value>
  </data>
  <data name="Word_Path" xml:space="preserve">
    <value>パス</value>
  </data>
  <data name="Word_Sheet" xml:space="preserve">
    <value>シート</value>
  </data>
  <data name="Word_DstFile" xml:space="preserve">
    <value>右側のファイル</value>
  </data>
  <data name="Word_SrcFile" xml:space="preserve">
    <value>左側のファイル</value>
  </data>
  <data name="Label_AddedColor" xml:space="preserve">
    <value>追加の色</value>
  </data>
  <data name="Label_ColorModifiedRow" xml:space="preserve">
    <value>変更がある行を色付けする</value>
  </data>
  <data name="Label_FrozenColumnColor" xml:space="preserve">
    <value>固定列の色</value>
  </data>
  <data name="Label_HeaderColor" xml:space="preserve">
    <value>ヘッダーの色</value>
  </data>
  <data name="Label_ModifiedColor" xml:space="preserve">
    <value>変更の色</value>
  </data>
  <data name="Label_ModifiedRowColor" xml:space="preserve">
    <value>変更がある行の色</value>
  </data>
  <data name="Label_RemovedColor" xml:space="preserve">
    <value>削除の色</value>
  </data>
  <data name="Label_RowColor" xml:space="preserve">
    <value>行の色</value>
  </data>
</root>